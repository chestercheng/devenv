#!/bin/bash
#
# Copyright (C) 2011 Yung-Yu Chen <yyc@solvcon.net>.
#
# Python development guide: https://docs.python.org/devguide/

set -e

pkgname=cpython
pkgbranch=${VERSION:-master}
pkgfull=${pkgname}-${pkgbranch}

syncgit https://github.com/python ${pkgname} ${pkgbranch}

pushd ${DEVENVROOT}/flavors/${DEVENVFLAVOR}/src/${pkgfull} > /dev/null

# build
PREFIX=${DEVENVPREFIX}
ARCH=64
ssldir=${DEVENVROOT}/usr/${DEVENVFLAVOR}

if [ $(uname) == Darwin ]; then
  export CPPFLAGS="-I${PREFIX}/include -I${ssldir}/include ${CPPFLAGS}"
  export LDFLAGS="-Wl,-rpath,${PREFIX}/lib -L${PREFIX}/lib -L${ssldir}/lib ${LDFLAGS}"
  sed -i -e "s/@OSX_ARCH@/${ARCH}/g" Lib/distutils/unixccompiler.py
elif [ $(uname) == Linux ]; then
  export CPPFLAGS="-I${PREFIX}/include ${CPPFLAGS}"
  export LDFLAGS="-L${PREFIX}/lib -Wl,-rpath=${PREFIX}/lib,--no-as-needed"
fi

cfgcmd=("./configure")
cfgcmd+=("--prefix=${PREFIX}")
cfgcmd+=("--enable-shared")
cfgcmd+=("--without-tests")
cfgcmd+=("--enable-ipv6")
cfgcmd+=("--with-ensurepip=no")
cfgcmd+=("--enable-optimizations")
cfgcmd+=("--with-lto")
cfgcmd+=("--with-tcltk-includes=-I${PREFIX}/include")
cfgcmd+=("--with-tcltk-libs=\"-L${PREFIX}/lib -ltcl8.5 -ltk8.5\"")
if [[ $(uname) == Darwin ]] ; then
  #cfgcmd+=("--enable-universalsdk")
  #cfgcmd+=("--with-universal-archs=intel-64")
  #cfgcmd+=("LLVM_AR=/usr/bin/ar")
  cfgcmd+=("--with-openssl=${ssldir}")
fi
#cfgcmd+=("--enable-loadable-sqlite-extensions")
if [[ ${DEVENVFLAVOR} == dbg* ]] ; then
  cfgcmd+=("--with-pydebug")
fi

# build.
buildcmd configure.log "${cfgcmd[@]}"
buildcmd make.log make -j ${NP}
buildcmd install.log make install

curl https://bootstrap.pypa.io/get-pip.py | ${PREFIX}/bin/python3
rm -f ${PREFIX}/bin/pip

# vim: set et nobomb ft=bash ff=unix fenc=utf8:
